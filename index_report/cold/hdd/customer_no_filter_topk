BEGIN
SET
SET
SET
CREATE TABLE
CREATE TABLE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.u_t  (cost=3578030.58..3578030.88 rows=20 width=26) (actual time=128368.104..128368.104 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=3578030.58..3578030.88 rows=20 width=26) (actual time=128367.412..128367.432 rows=20 loops=1)
         Output: "*SELECT*".name, "*SELECT*".uid, "*SELECT*".price
         ->  Limit  (cost=3578030.58..3578030.63 rows=20 width=26) (actual time=128367.407..128367.416 rows=20 loops=1)
               Output: u.name, s.uid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=3578030.58..3609280.58 rows=12500000 width=26) (actual time=128367.405..128367.411 rows=20 loops=1)
                     Output: u.name, s.uid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  GroupAggregate  (cost=2964160.07..3245410.07 rows=12500000 width=26) (actual time=105159.885..127615.679 rows=2500001 loops=1)
                           Output: u.name, s.uid, sum((s.quantity * s.price))
                           ->  Sort  (cost=2964160.07..2995410.07 rows=12500000 width=26) (actual time=105024.901..122640.987 rows=12516846 loops=1)
                                 Output: u.name, s.uid, s.quantity, s.price
                                 Sort Key: s.uid, u.name
                                 Sort Method: external merge  Disk: 464584kB
                                 ->  Hash Right Join  (cost=91732.02..636196.02 rows=12500000 width=26) (actual time=2121.491..35730.393 rows=12516846 loops=1)
                                       Output: u.name, s.uid, s.quantity, s.price
                                       Hash Cond: (s.uid = u.id)
                                       ->  Seq Scan on public.sales s  (cost=0.00..204618.00 rows=12500000 width=12) (actual time=0.442..14233.894 rows=12500000 loops=1)
                                             Output: s.uid, s.quantity, s.price
                                       ->  Hash  (cost=45833.01..45833.01 rows=2500001 width=18) (actual time=2117.508..2117.508 rows=2500001 loops=1)
                                             Output: u.name, u.id
                                             Buckets: 1024  Batches: 1024  Memory Usage: 132kB
                                             ->  Seq Scan on public.users u  (cost=0.00..45833.01 rows=2500001 width=18) (actual time=0.004..1059.895 rows=2500001 loops=1)
                                                   Output: u.name, u.id
 Total runtime: 128423.340 ms
(26 rows)

                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.p_t  (cost=3144557.55..3144557.70 rows=10 width=20) (actual time=138967.351..138967.351 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=3144557.55..3144557.70 rows=10 width=20) (actual time=138963.941..138963.952 rows=10 loops=1)
         Output: "*SELECT*".name, "*SELECT*".pid, "*SELECT*".price
         ->  Limit  (cost=3144557.55..3144557.58 rows=10 width=20) (actual time=138963.936..138963.941 rows=10 loops=1)
               Output: p.name, s.pid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=3144557.55..3175807.55 rows=12500000 width=20) (actual time=138963.934..138963.937 rows=10 loops=1)
                     Output: p.name, s.pid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  GroupAggregate  (cost=2593187.05..2874437.05 rows=12500000 width=20) (actual time=111057.464..138923.919 rows=100000 loops=1)
                           Output: p.name, s.pid, sum((s.quantity * s.price))
                           ->  Sort  (cost=2593187.05..2624437.05 rows=12500000 width=20) (actual time=111057.301..134768.116 rows=12500000 loops=1)
                                 Output: p.name, s.pid, s.quantity, s.price
                                 Sort Key: s.pid, p.name
                                 Sort Method: external merge  Disk: 410624kB
                                 ->  Hash Right Join  (cost=3475.00..533779.00 rows=12500000 width=20) (actual time=63.028..29022.585 rows=12500000 loops=1)
                                       Output: p.name, s.pid, s.quantity, s.price
                                       Hash Cond: (s.pid = p.id)
                                       ->  Seq Scan on public.sales s  (cost=0.00..204618.00 rows=12500000 width=12) (actual time=0.394..9727.557 rows=12500000 loops=1)
                                             Output: s.pid, s.quantity, s.price
                                       ->  Hash  (cost=1736.00..1736.00 rows=100000 width=12) (actual time=62.445..62.445 rows=100000 loops=1)
                                             Output: p.name, p.id
                                             Buckets: 1024  Batches: 32  Memory Usage: 150kB
                                             ->  Seq Scan on public.products p  (cost=0.00..1736.00 rows=100000 width=12) (actual time=0.005..30.539 rows=100000 loops=1)
                                                   Output: p.name, p.id
 Total runtime: 139011.233 ms
(26 rows)

                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=7854.32..7855.06 rows=74 width=16) (actual time=0.596..0.596 rows=0 loops=1)
   ->  Hash Join  (cost=7729.34..7853.58 rows=74 width=16) (actual time=0.594..0.594 rows=0 loops=1)
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on p_t p  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.005..0.005 rows=1 loops=1)
         ->  Hash  (cost=7620.49..7620.49 rows=6228 width=16) (actual time=0.579..0.579 rows=0 loops=1)
               Buckets: 1024  Batches: 2  Memory Usage: 0kB
               ->  Nested Loop  (cost=0.00..7620.49 rows=6228 width=16) (actual time=0.578..0.578 rows=0 loops=1)
                     ->  Seq Scan on u_t u  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.002..0.008 rows=20 loops=1)
                     ->  Index Scan using sales_uid on sales s  (cost=0.00..6.50 rows=5 width=16) (actual time=0.000..0.000 rows=0 loops=20)
                           Index Cond: (uid = u.id)
 Total runtime: 1.199 ms
(11 rows)

COMMIT
