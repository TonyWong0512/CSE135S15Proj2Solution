BEGIN
SET
SET
CREATE TABLE
CREATE TABLE
INSERT 0 20
INSERT 0 10
                                                               QUERY PLAN                                                               
----------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=9254.99..9333.41 rows=7842 width=12) (actual time=43.258..43.270 rows=20 loops=1)
   Output: s.uid, sum((s.quantity * s.price))
   ->  Nested Loop Left Join  (cost=0.44..9196.17 rows=7842 width=12) (actual time=2.621..43.013 rows=91 loops=1)
         Output: s.uid, s.quantity, s.price
         ->  Seq Scan on pg_temp_2.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.004..0.018 rows=20 loops=1)
               Output: u.id, u.name
         ->  Index Scan using sales_uid on public.sales s  (cost=0.44..7.40 rows=6 width=12) (actual time=0.686..2.144 rows=5 loops=20)
               Output: s.id, s.uid, s.pid, s.quantity, s.price
               Index Cond: (s.uid = u.id)
 Total runtime: 43.374 ms
(10 rows)

                                                                  QUERY PLAN                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=304275.62..305256.48 rows=98086 width=12) (actual time=907.732..907.850 rows=10 loops=1)
   Output: s.pid, sum((s.quantity * s.price))
   ->  Nested Loop Left Join  (cost=0.44..301924.37 rows=313500 width=12) (actual time=1.676..903.286 rows=2468 loops=1)
         Output: s.pid, s.quantity, s.price
         ->  Seq Scan on pg_temp_2.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.002..0.013 rows=10 loops=1)
               Output: p.id, p.name
         ->  Index Scan using sales_pid on public.sales s  (cost=0.44..242.90 rows=255 width=12) (actual time=0.820..90.138 rows=247 loops=10)
               Output: s.id, s.uid, s.pid, s.quantity, s.price
               Index Cond: (s.pid = p.id)
 Total runtime: 908.268 ms
(10 rows)

                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=9532.17..9533.15 rows=98 width=16) (actual time=0.150..0.150 rows=0 loops=1)
   Output: s.uid, s.pid, sum((s.quantity * s.price))
   ->  Hash Join  (cost=9312.65..9531.19 rows=98 width=16) (actual time=0.150..0.150 rows=0 loops=1)
         Output: s.uid, s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_2.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.003..0.004 rows=10 loops=1)
               Output: p.id, p.name
         ->  Hash  (cost=9214.62..9214.62 rows=7842 width=16) (actual time=0.142..0.142 rows=91 loops=1)
               Output: s.uid, s.pid, s.quantity, s.price
               Buckets: 1024  Batches: 1  Memory Usage: 5kB
               ->  Nested Loop  (cost=0.44..9214.62 rows=7842 width=16) (actual time=0.011..0.126 rows=91 loops=1)
                     Output: s.uid, s.pid, s.quantity, s.price
                     ->  Seq Scan on pg_temp_2.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.001..0.001 rows=20 loops=1)
                           Output: u.id, u.name
                     ->  Index Scan using sales_uid on public.sales s  (cost=0.44..7.41 rows=6 width=16) (actual time=0.003..0.006 rows=5 loops=20)
                           Output: s.id, s.uid, s.pid, s.quantity, s.price
                           Index Cond: (s.uid = u.id)
 Total runtime: 0.179 ms
(18 rows)

COMMIT
