BEGIN
SET
CREATE TABLE
CREATE TABLE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.s_t  (cost=634.76..635.06 rows=20 width=44) (actual time=5.012..5.012 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=634.76..635.06 rows=20 width=44) (actual time=4.901..4.912 rows=20 loops=1)
         Output: "*SELECT*".name, "*SELECT*".id, "*SELECT*".price
         ->  Limit  (cost=634.76..634.81 rows=20 width=44) (actual time=4.900..4.907 rows=20 loops=1)
               Output: st.name, st.id, (sum((s2.quantity * s2.price)))
               ->  Sort  (cost=634.76..637.84 rows=1230 width=44) (actual time=4.898..4.900 rows=20 loops=1)
                     Output: st.name, st.id, (sum((s2.quantity * s2.price)))
                     Sort Key: (sum((s2.quantity * s2.price)))
                     Sort Method: top-N heapsort  Memory: 26kB
                     ->  HashAggregate  (cost=589.73..602.03 rows=1230 width=44) (actual time=4.864..4.876 rows=50 loops=1)
                           Output: st.name, st.id, sum((s2.quantity * s2.price))
                           ->  Hash Left Join  (cost=547.98..577.43 rows=1230 width=44) (actual time=4.815..4.837 rows=67 loops=1)
                                 Output: st.name, st.id, s2.quantity, s2.price
                                 Hash Cond: (st.id = u.state)
                                 ->  Seq Scan on public.states st  (cost=0.00..22.30 rows=1230 width=36) (actual time=0.002..0.004 rows=50 loops=1)
                                       Output: st.id, st.name
                                 ->  Hash  (cost=546.73..546.73 rows=100 width=12) (actual time=4.806..4.806 rows=46 loops=1)
                                       Output: u.state, s2.quantity, s2.price
                                       Buckets: 1024  Batches: 1  Memory Usage: 2kB
                                       ->  Nested Loop  (cost=10.56..546.73 rows=100 width=12) (actual time=0.190..4.791 rows=46 loops=1)
                                             Output: u.state, s2.quantity, s2.price
                                             ->  Hash Join  (cost=10.28..515.02 rows=100 width=12) (actual time=0.185..4.664 rows=46 loops=1)
                                                   Output: s2.quantity, s2.price, s2.uid
                                                   Hash Cond: (s2.pid = p.id)
                                                   ->  Seq Scan on public.sales s2  (cost=0.00..410.00 rows=25000 width=16) (actual time=0.003..1.826 rows=25000 loops=1)
                                                         Output: s2.id, s2.uid, s2.pid, s2.quantity, s2.price
                                                   ->  Hash  (cost=10.25..10.25 rows=2 width=4) (actual time=0.040..0.040 rows=1 loops=1)
                                                         Output: p.id
                                                         Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                         ->  Seq Scan on public.products p  (cost=0.00..10.25 rows=2 width=4) (actual time=0.015..0.039 rows=1 loops=1)
                                                               Output: p.id
                                                               Filter: (p.cid = 1)
                                                               Rows Removed by Filter: 499
                                             ->  Index Scan using users_pkey on public.users u  (cost=0.28..0.31 rows=1 width=8) (actual time=0.002..0.002 rows=1 loops=46)
                                                   Output: u.id, u.name, u.role, u.age, u.state
                                                   Index Cond: (u.id = s2.uid)
 Total runtime: 5.104 ms
(37 rows)

                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.p_t  (cost=519.19..519.34 rows=10 width=18) (actual time=4.691..4.691 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=519.19..519.34 rows=10 width=18) (actual time=4.616..4.617 rows=1 loops=1)
         Output: "*SELECT*".name, "*SELECT*".pid, "*SELECT*".price
         ->  Limit  (cost=519.19..519.21 rows=10 width=18) (actual time=4.614..4.614 rows=1 loops=1)
               Output: p.name, s.pid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=519.19..519.44 rows=100 width=18) (actual time=4.613..4.613 rows=1 loops=1)
                     Output: p.name, s.pid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: quicksort  Memory: 25kB
                     ->  HashAggregate  (cost=516.02..517.02 rows=100 width=18) (actual time=4.608..4.609 rows=1 loops=1)
                           Output: p.name, s.pid, sum((s.quantity * s.price))
                           ->  Hash Join  (cost=10.28..515.02 rows=100 width=18) (actual time=0.172..4.586 rows=46 loops=1)
                                 Output: p.name, s.pid, s.quantity, s.price
                                 Hash Cond: (s.pid = p.id)
                                 ->  Seq Scan on public.sales s  (cost=0.00..410.00 rows=25000 width=12) (actual time=0.003..2.008 rows=25000 loops=1)
                                       Output: s.id, s.uid, s.pid, s.quantity, s.price
                                 ->  Hash  (cost=10.25..10.25 rows=2 width=10) (actual time=0.039..0.039 rows=1 loops=1)
                                       Output: p.name, p.id
                                       Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                       ->  Seq Scan on public.products p  (cost=0.00..10.25 rows=2 width=10) (actual time=0.015..0.038 rows=1 loops=1)
                                             Output: p.name, p.id
                                             Filter: (p.cid = 1)
                                             Rows Removed by Filter: 499
 Total runtime: 4.740 ms
(24 rows)

                                                                   QUERY PLAN                                                                    
-------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=11132.00..11382.00 rows=25000 width=16) (actual time=9.811..9.859 rows=20 loops=1)
   Output: u.state, s.pid, sum((s.quantity * s.price))
   ->  Hash Join  (cost=2314.27..7767.98 rows=336402 width=16) (actual time=8.950..9.789 rows=24 loops=1)
         Output: u.state, s.pid, s.quantity, s.price
         Hash Cond: (u.id = s.uid)
         ->  Hash Join  (cost=153.52..647.88 rows=29006 width=8) (actual time=1.410..1.964 rows=2011 loops=1)
               Output: u.state, u.id
               Hash Cond: (st.id = u.state)
               ->  Seq Scan on pg_temp_2.s_t st  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.003..0.006 rows=20 loops=1)
                     Output: st.name, st.id, st.price
               ->  Hash  (cost=91.01..91.01 rows=5001 width=8) (actual time=1.399..1.399 rows=5001 loops=1)
                     Output: u.state, u.id
                     Buckets: 1024  Batches: 1  Memory Usage: 196kB
                     ->  Seq Scan on public.users u  (cost=0.00..91.01 rows=5001 width=8) (actual time=0.003..0.668 rows=5001 loops=1)
                           Output: u.state, u.id
         ->  Hash  (cost=1435.75..1435.75 rows=58000 width=16) (actual time=7.465..7.465 rows=46 loops=1)
               Output: s.pid, s.quantity, s.price, s.uid
               Buckets: 8192  Batches: 1  Memory Usage: 3kB
               ->  Hash Join  (cost=722.50..1435.75 rows=58000 width=16) (actual time=7.418..7.437 rows=46 loops=1)
                     Output: s.pid, s.quantity, s.price, s.uid
                     Hash Cond: (p.id = s.pid)
                     ->  Seq Scan on pg_temp_2.p_t p  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.002..0.003 rows=1 loops=1)
                           Output: p.name, p.id, p.price
                     ->  Hash  (cost=410.00..410.00 rows=25000 width=16) (actual time=7.401..7.401 rows=25000 loops=1)
                           Output: s.pid, s.quantity, s.price, s.uid
                           Buckets: 4096  Batches: 1  Memory Usage: 1172kB
                           ->  Seq Scan on public.sales s  (cost=0.00..410.00 rows=25000 width=16) (actual time=0.004..3.328 rows=25000 loops=1)
                                 Output: s.pid, s.quantity, s.price, s.uid
 Total runtime: 10.314 ms
(29 rows)

COMMIT
