BEGIN
SET
SET
SET
CREATE TABLE
CREATE TABLE
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.u_t  (cost=4380.22..4380.52 rows=20 width=23) (actual time=110.395..110.395 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=4380.22..4380.52 rows=20 width=23) (actual time=110.232..110.253 rows=20 loops=1)
         Output: "*SELECT*".name, "*SELECT*".uid, "*SELECT*".price
         ->  Limit  (cost=4380.22..4380.27 rows=20 width=23) (actual time=110.229..110.240 rows=20 loops=1)
               Output: u.name, s.uid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=4380.22..4442.72 rows=25000 width=23) (actual time=110.228..110.233 rows=20 loops=1)
                     Output: u.name, s.uid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  GroupAggregate  (cost=3152.48..3714.98 rows=25000 width=23) (actual time=64.261..108.719 rows=5001 loops=1)
                           Output: u.name, s.uid, sum((s.quantity * s.price))
                           ->  Sort  (cost=3152.48..3214.98 rows=25000 width=23) (actual time=64.245..99.013 rows=25037 loops=1)
                                 Output: u.name, s.uid, s.quantity, s.price
                                 Sort Key: s.uid, u.name
                                 Sort Method: external merge  Disk: 840kB
                                 ->  Hash Right Join  (cost=153.52..1032.27 rows=25000 width=23) (actual time=2.783..23.797 rows=25037 loops=1)
                                       Output: u.name, s.uid, s.quantity, s.price
                                       Hash Cond: (s.uid = u.id)
                                       ->  Seq Scan on public.sales s  (cost=0.00..410.00 rows=25000 width=12) (actual time=0.004..5.632 rows=25000 loops=1)
                                             Output: s.id, s.uid, s.pid, s.quantity, s.price
                                       ->  Hash  (cost=91.01..91.01 rows=5001 width=15) (actual time=2.766..2.766 rows=5001 loops=1)
                                             Output: u.name, u.id
                                             Buckets: 1024  Batches: 1  Memory Usage: 235kB
                                             ->  Seq Scan on public.users u  (cost=0.00..91.01 rows=5001 width=15) (actual time=0.005..1.328 rows=5001 loops=1)
                                                   Output: u.name, u.id
 Total runtime: 110.668 ms
(26 rows)

                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.p_t  (cost=3991.95..3992.10 rows=10 width=18) (actual time=129.642..129.642 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=3991.95..3992.10 rows=10 width=18) (actual time=129.548..129.558 rows=10 loops=1)
         Output: "*SELECT*".name, "*SELECT*".pid, "*SELECT*".price
         ->  Limit  (cost=3991.95..3991.97 rows=10 width=18) (actual time=129.545..129.549 rows=10 loops=1)
               Output: p.name, s.pid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=3991.95..4054.45 rows=25000 width=18) (actual time=129.543..129.546 rows=10 loops=1)
                     Output: p.name, s.pid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  GroupAggregate  (cost=2889.21..3451.71 rows=25000 width=18) (actual time=82.662..129.351 rows=500 loops=1)
                           Output: p.name, s.pid, sum((s.quantity * s.price))
                           ->  Sort  (cost=2889.21..2951.71 rows=25000 width=18) (actual time=82.604..121.078 rows=25000 loops=1)
                                 Output: p.name, s.pid, s.quantity, s.price
                                 Sort Key: s.pid, p.name
                                 Sort Method: external merge  Disk: 744kB
                                 ->  Hash Right Join  (cost=15.25..769.00 rows=25000 width=18) (actual time=0.278..18.657 rows=25000 loops=1)
                                       Output: p.name, s.pid, s.quantity, s.price
                                       Hash Cond: (s.pid = p.id)
                                       ->  Seq Scan on public.sales s  (cost=0.00..410.00 rows=25000 width=12) (actual time=0.003..5.314 rows=25000 loops=1)
                                             Output: s.id, s.uid, s.pid, s.quantity, s.price
                                       ->  Hash  (cost=9.00..9.00 rows=500 width=10) (actual time=0.269..0.269 rows=500 loops=1)
                                             Output: p.name, p.id
                                             Buckets: 1024  Batches: 1  Memory Usage: 22kB
                                             ->  Seq Scan on public.products p  (cost=0.00..9.00 rows=500 width=10) (actual time=0.006..0.147 rows=500 loops=1)
                                                   Output: p.name, p.id
 Total runtime: 129.902 ms
(26 rows)

                                                                    QUERY PLAN                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------
 GroupAggregate  (cost=2107.29..2326.35 rows=4964 width=16) (actual time=0.043..0.043 rows=0 loops=1)
   ->  Sort  (cost=2107.29..2141.18 rows=13553 width=16) (actual time=0.043..0.043 rows=0 loops=1)
         Sort Key: s.uid, s.pid
         Sort Method: quicksort  Memory: 25kB
         ->  Hash Join  (cost=819.45..1043.13 rows=13553 width=16) (actual time=0.029..0.029 rows=0 loops=1)
               Hash Cond: (p.id = s.pid)
               ->  Seq Scan on p_t p  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.003..0.003 rows=1 loops=1)
               ->  Hash  (cost=717.42..717.42 rows=5842 width=16) (actual time=0.021..0.021 rows=0 loops=1)
                     Buckets: 1024  Batches: 2  Memory Usage: 0kB
                     ->  Nested Loop  (cost=0.00..717.42 rows=5842 width=16) (actual time=0.020..0.020 rows=0 loops=1)
                           ->  Seq Scan on u_t u  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.001..0.005 rows=20 loops=1)
                           ->  Index Scan using sales_uid on sales s  (cost=0.00..0.55 rows=5 width=16) (actual time=0.000..0.000 rows=0 loops=20)
                                 Index Cond: (uid = u.id)
 Total runtime: 0.086 ms
(14 rows)

COMMIT
