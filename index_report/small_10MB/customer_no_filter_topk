BEGIN
CREATE TABLE
CREATE TABLE
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.u_t  (cost=2606.31..2606.61 rows=20 width=23) (actual time=66.984..66.984 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=2606.31..2606.61 rows=20 width=23) (actual time=66.825..66.833 rows=20 loops=1)
         Output: "*SELECT*".name, "*SELECT*".uid, "*SELECT*".price
         ->  Limit  (cost=2606.31..2606.36 rows=20 width=23) (actual time=66.820..66.823 rows=20 loops=1)
               Output: u.name, s.uid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=2606.31..2681.31 rows=30000 width=23) (actual time=66.819..66.820 rows=20 loops=1)
                     Output: u.name, s.uid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 26kB
                     ->  HashAggregate  (cost=1508.02..1808.02 rows=30000 width=23) (actual time=65.092..66.109 rows=4989 loops=1)
                           Output: u.name, s.uid, sum((s.quantity * s.price))
                           ->  Hash Join  (cost=153.52..1208.02 rows=30000 width=23) (actual time=5.166..40.917 rows=30000 loops=1)
                                 Output: u.name, s.uid, s.quantity, s.price
                                 Hash Cond: (s.uid = u.id)
                                 ->  Seq Scan on public.sales s  (cost=0.00..492.00 rows=30000 width=12) (actual time=0.004..5.624 rows=30000 loops=1)
                                       Output: s.id, s.uid, s.pid, s.quantity, s.price
                                 ->  Hash  (cost=91.01..91.01 rows=5001 width=15) (actual time=5.148..5.148 rows=5001 loops=1)
                                       Output: u.name, u.id
                                       Buckets: 1024  Batches: 1  Memory Usage: 235kB
                                       ->  Seq Scan on public.users u  (cost=0.00..91.01 rows=5001 width=15) (actual time=0.004..4.305 rows=5001 loops=1)
                                             Output: u.name, u.id
 Total runtime: 67.257 ms
(22 rows)

                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.p_t  (cost=1523.85..1524.00 rows=10 width=17) (actual time=21.247..21.247 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=1523.85..1524.00 rows=10 width=17) (actual time=21.151..21.154 rows=10 loops=1)
         Output: "*SELECT*".name, "*SELECT*".pid, "*SELECT*".price
         ->  Limit  (cost=1523.85..1523.87 rows=10 width=17) (actual time=21.147..21.148 rows=10 loops=1)
               Output: p.name, s.pid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=1523.85..1548.85 rows=10000 width=17) (actual time=21.146..21.146 rows=10 loops=1)
                     Output: p.name, s.pid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  HashAggregate  (cost=1207.75..1307.75 rows=10000 width=17) (actual time=21.087..21.122 rows=100 loops=1)
                           Output: p.name, s.pid, sum((s.quantity * s.price))
                           ->  Hash Join  (cost=3.25..907.75 rows=30000 width=17) (actual time=0.043..11.322 rows=30000 loops=1)
                                 Output: p.name, s.pid, s.quantity, s.price
                                 Hash Cond: (s.pid = p.id)
                                 ->  Seq Scan on public.sales s  (cost=0.00..492.00 rows=30000 width=12) (actual time=0.006..2.895 rows=30000 loops=1)
                                       Output: s.id, s.uid, s.pid, s.quantity, s.price
                                 ->  Hash  (cost=2.00..2.00 rows=100 width=9) (actual time=0.031..0.031 rows=100 loops=1)
                                       Output: p.name, p.id
                                       Buckets: 1024  Batches: 1  Memory Usage: 5kB
                                       ->  Seq Scan on public.products p  (cost=0.00..2.00 rows=100 width=9) (actual time=0.004..0.017 rows=100 loops=1)
                                             Output: p.name, p.id
 Total runtime: 21.358 ms
(22 rows)

                                                                QUERY PLAN                                                                
------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2025.59..2075.48 rows=4989 width=16) (actual time=16.762..16.867 rows=34 loops=1)
   ->  Hash Join  (cost=1078.89..1621.04 rows=40455 width=16) (actual time=16.581..16.638 rows=38 loops=1)
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on p_t p  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.002..0.010 rows=10 loops=1)
         ->  Hash  (cost=991.70..991.70 rows=6975 width=16) (actual time=16.546..16.546 rows=245 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 12kB
               ->  Hash Join  (cost=867.00..991.70 rows=6975 width=16) (actual time=15.581..16.299 rows=245 loops=1)
                     Hash Cond: (u.id = s.uid)
                     ->  Seq Scan on u_t u  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.002..0.039 rows=20 loops=1)
                     ->  Hash  (cost=492.00..492.00 rows=30000 width=16) (actual time=15.538..15.538 rows=30000 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 1407kB
                           ->  Seq Scan on sales s  (cost=0.00..492.00 rows=30000 width=16) (actual time=0.005..9.044 rows=30000 loops=1)
 Total runtime: 17.262 ms
(13 rows)

COMMIT
