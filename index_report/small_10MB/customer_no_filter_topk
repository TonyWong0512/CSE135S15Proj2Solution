BEGIN
CREATE TABLE
CREATE TABLE
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.u_t  (cost=2606.31..2606.61 rows=20 width=23) (actual time=31.732..31.732 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=2606.31..2606.61 rows=20 width=23) (actual time=31.586..31.595 rows=20 loops=1)
         Output: "*SELECT*".name, "*SELECT*".uid, "*SELECT*".price
         ->  Limit  (cost=2606.31..2606.36 rows=20 width=23) (actual time=31.581..31.584 rows=20 loops=1)
               Output: u.name, s.uid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=2606.31..2681.31 rows=30000 width=23) (actual time=31.580..31.582 rows=20 loops=1)
                     Output: u.name, s.uid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 26kB
                     ->  HashAggregate  (cost=1508.02..1808.02 rows=30000 width=23) (actual time=30.179..30.906 rows=5001 loops=1)
                           Output: u.name, s.uid, sum((s.quantity * s.price))
                           ->  Hash Right Join  (cost=153.52..1208.02 rows=30000 width=23) (actual time=2.088..18.336 rows=30012 loops=1)
                                 Output: u.name, s.uid, s.quantity, s.price
                                 Hash Cond: (s.uid = u.id)
                                 ->  Seq Scan on public.sales s  (cost=0.00..492.00 rows=30000 width=12) (actual time=0.004..2.882 rows=30000 loops=1)
                                       Output: s.id, s.uid, s.pid, s.quantity, s.price
                                 ->  Hash  (cost=91.01..91.01 rows=5001 width=15) (actual time=2.072..2.072 rows=5001 loops=1)
                                       Output: u.name, u.id
                                       Buckets: 1024  Batches: 1  Memory Usage: 235kB
                                       ->  Seq Scan on public.users u  (cost=0.00..91.01 rows=5001 width=15) (actual time=0.005..0.631 rows=5001 loops=1)
                                             Output: u.name, u.id
 Total runtime: 32.048 ms
(22 rows)

                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.p_t  (cost=1523.85..1524.00 rows=10 width=17) (actual time=19.504..19.504 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=1523.85..1524.00 rows=10 width=17) (actual time=19.394..19.401 rows=10 loops=1)
         Output: "*SELECT*".name, "*SELECT*".pid, "*SELECT*".price
         ->  Limit  (cost=1523.85..1523.87 rows=10 width=17) (actual time=19.391..19.393 rows=10 loops=1)
               Output: p.name, s.pid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=1523.85..1548.85 rows=10000 width=17) (actual time=19.390..19.391 rows=10 loops=1)
                     Output: p.name, s.pid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  HashAggregate  (cost=1207.75..1307.75 rows=10000 width=17) (actual time=19.336..19.366 rows=100 loops=1)
                           Output: p.name, s.pid, sum((s.quantity * s.price))
                           ->  Hash Right Join  (cost=3.25..907.75 rows=30000 width=17) (actual time=0.034..10.586 rows=30000 loops=1)
                                 Output: p.name, s.pid, s.quantity, s.price
                                 Hash Cond: (s.pid = p.id)
                                 ->  Seq Scan on public.sales s  (cost=0.00..492.00 rows=30000 width=12) (actual time=0.003..2.508 rows=30000 loops=1)
                                       Output: s.id, s.uid, s.pid, s.quantity, s.price
                                 ->  Hash  (cost=2.00..2.00 rows=100 width=9) (actual time=0.025..0.025 rows=100 loops=1)
                                       Output: p.name, p.id
                                       Buckets: 1024  Batches: 1  Memory Usage: 5kB
                                       ->  Seq Scan on public.products p  (cost=0.00..2.00 rows=100 width=9) (actual time=0.003..0.014 rows=100 loops=1)
                                             Output: p.name, p.id
 Total runtime: 19.568 ms
(22 rows)

                                                                QUERY PLAN                                                                
------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2025.59..2075.48 rows=4989 width=16) (actual time=9.030..9.042 rows=19 loops=1)
   ->  Hash Join  (cost=1078.89..1621.04 rows=40455 width=16) (actual time=9.010..9.013 rows=21 loops=1)
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on p_t p  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.002..0.005 rows=10 loops=1)
         ->  Hash  (cost=991.70..991.70 rows=6975 width=16) (actual time=9.003..9.003 rows=108 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 6kB
               ->  Hash Join  (cost=867.00..991.70 rows=6975 width=16) (actual time=8.941..8.992 rows=108 loops=1)
                     Hash Cond: (u.id = s.uid)
                     ->  Seq Scan on u_t u  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.002..0.004 rows=20 loops=1)
                     ->  Hash  (cost=492.00..492.00 rows=30000 width=16) (actual time=8.924..8.924 rows=30000 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 1407kB
                           ->  Seq Scan on sales s  (cost=0.00..492.00 rows=30000 width=16) (actual time=0.004..4.211 rows=30000 loops=1)
 Total runtime: 9.222 ms
(13 rows)

COMMIT
BEGIN
CREATE TABLE
CREATE TABLE
                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.u_t  (cost=2197.51..2197.81 rows=20 width=23) (actual time=31.058..31.058 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=2197.51..2197.81 rows=20 width=23) (actual time=30.892..30.899 rows=20 loops=1)
         Output: "*SELECT*".name, "*SELECT*".uid, "*SELECT*".price
         ->  Limit  (cost=2197.51..2197.56 rows=20 width=23) (actual time=30.885..30.888 rows=20 loops=1)
               Output: u.name, s.uid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=2197.51..2260.01 rows=25000 width=23) (actual time=30.884..30.886 rows=20 loops=1)
                     Output: u.name, s.uid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  HashAggregate  (cost=1282.27..1532.27 rows=25000 width=23) (actual time=27.633..28.949 rows=5001 loops=1)
                           Output: u.name, s.uid, sum((s.quantity * s.price))
                           ->  Hash Right Join  (cost=153.52..1032.27 rows=25000 width=23) (actual time=1.774..17.247 rows=25029 loops=1)
                                 Output: u.name, s.uid, s.quantity, s.price
                                 Hash Cond: (s.uid = u.id)
                                 ->  Seq Scan on public.sales s  (cost=0.00..410.00 rows=25000 width=12) (actual time=0.007..2.890 rows=25000 loops=1)
                                       Output: s.id, s.uid, s.pid, s.quantity, s.price
                                 ->  Hash  (cost=91.01..91.01 rows=5001 width=15) (actual time=1.756..1.756 rows=5001 loops=1)
                                       Output: u.name, u.id
                                       Buckets: 1024  Batches: 1  Memory Usage: 235kB
                                       ->  Seq Scan on public.users u  (cost=0.00..91.01 rows=5001 width=15) (actual time=0.005..0.624 rows=5001 loops=1)
                                             Output: u.name, u.id
 Total runtime: 31.276 ms
(22 rows)

                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.p_t  (cost=1809.24..1809.39 rows=10 width=18) (actual time=16.290..16.290 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=1809.24..1809.39 rows=10 width=18) (actual time=16.204..16.208 rows=10 loops=1)
         Output: "*SELECT*".name, "*SELECT*".pid, "*SELECT*".price
         ->  Limit  (cost=1809.24..1809.27 rows=10 width=18) (actual time=16.200..16.202 rows=10 loops=1)
               Output: p.name, s.pid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=1809.24..1871.74 rows=25000 width=18) (actual time=16.199..16.200 rows=10 loops=1)
                     Output: p.name, s.pid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  HashAggregate  (cost=1019.00..1269.00 rows=25000 width=18) (actual time=16.057..16.133 rows=500 loops=1)
                           Output: p.name, s.pid, sum((s.quantity * s.price))
                           ->  Hash Right Join  (cost=15.25..769.00 rows=25000 width=18) (actual time=0.134..9.132 rows=25000 loops=1)
                                 Output: p.name, s.pid, s.quantity, s.price
                                 Hash Cond: (s.pid = p.id)
                                 ->  Seq Scan on public.sales s  (cost=0.00..410.00 rows=25000 width=12) (actual time=0.004..2.000 rows=25000 loops=1)
                                       Output: s.id, s.uid, s.pid, s.quantity, s.price
                                 ->  Hash  (cost=9.00..9.00 rows=500 width=10) (actual time=0.124..0.124 rows=500 loops=1)
                                       Output: p.name, p.id
                                       Buckets: 1024  Batches: 1  Memory Usage: 22kB
                                       ->  Seq Scan on public.products p  (cost=0.00..9.00 rows=500 width=10) (actual time=0.004..0.052 rows=500 loops=1)
                                             Output: p.name, p.id
 Total runtime: 16.378 ms
(22 rows)

                                                                QUERY PLAN                                                                
------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1224.15..1273.87 rows=4972 width=16) (actual time=6.943..6.943 rows=0 loops=1)
   ->  Hash Join  (cost=904.34..1088.82 rows=13533 width=16) (actual time=6.932..6.932 rows=0 loops=1)
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on p_t p  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.002..0.002 rows=1 loops=1)
         ->  Hash  (cost=831.43..831.43 rows=5833 width=16) (actual time=6.929..6.929 rows=0 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 0kB
               ->  Hash Join  (cost=722.50..831.43 rows=5833 width=16) (actual time=6.929..6.929 rows=0 loops=1)
                     Hash Cond: (u.id = s.uid)
                     ->  Seq Scan on u_t u  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.002..0.003 rows=20 loops=1)
                     ->  Hash  (cost=410.00..410.00 rows=25000 width=16) (actual time=6.920..6.920 rows=25000 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 1172kB
                           ->  Seq Scan on sales s  (cost=0.00..410.00 rows=25000 width=16) (actual time=0.004..3.495 rows=25000 loops=1)
 Total runtime: 7.048 ms
(13 rows)

COMMIT
