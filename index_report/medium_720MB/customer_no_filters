BEGIN
CREATE TABLE
CREATE TABLE
INSERT 0 20
INSERT 0 10
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=31980.55..32054.82 rows=7427 width=12) (actual time=1.041..1.055 rows=20 loops=1)
   Output: s.uid, sum((s.quantity * s.price))
   ->  Nested Loop Left Join  (cost=0.43..31924.85 rows=7427 width=12) (actual time=0.043..0.957 rows=134 loops=1)
         Output: s.uid, s.quantity, s.price
         ->  Seq Scan on pg_temp_3.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.011..0.018 rows=20 loops=1)
               Output: u.id, u.name
         ->  Index Scan using sales_uid on public.sales s  (cost=0.43..25.88 rows=6 width=12) (actual time=0.010..0.044 rows=7 loops=20)
               Output: s.id, s.uid, s.pid, s.quantity, s.price
               Index Cond: (s.uid = u.id)
 Total runtime: 1.305 ms
(10 rows)

                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=206805.96..206905.85 rows=9989 width=12) (actual time=3530.533..3530.550 rows=10 loops=1)
   Output: s.pid, sum((s.quantity * s.price))
   ->  Hash Left Join  (cost=168763.00..202188.38 rows=615677 width=12) (actual time=2819.199..3527.283 rows=5038 loops=1)
         Output: s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_3.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.003..0.027 rows=10 loops=1)
               Output: p.id
         ->  Hash  (cost=81848.00..81848.00 rows=5000000 width=12) (actual time=2818.955..2818.955 rows=5000000 loops=1)
               Output: s.pid, s.quantity, s.price
               Buckets: 262144  Batches: 4  Memory Usage: 54147kB
               ->  Seq Scan on public.sales s  (cost=0.00..81848.00 rows=5000000 width=12) (actual time=0.030..1172.236 rows=5000000 loops=1)
                     Output: s.pid, s.quantity, s.price
 Total runtime: 3543.628 ms
(13 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=32121.32..32130.47 rows=915 width=16) (actual time=0.229..0.229 rows=0 loops=1)
   Output: s.uid, s.pid, sum((s.quantity * s.price))
   ->  Hash Join  (cost=32036.14..32112.17 rows=915 width=16) (actual time=0.228..0.228 rows=0 loops=1)
         Output: s.uid, s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_3.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.003..0.005 rows=10 loops=1)
               Output: p.id, p.name
         ->  Hash  (cost=31943.30..31943.30 rows=7427 width=16) (actual time=0.219..0.219 rows=134 loops=1)
               Output: s.uid, s.pid, s.quantity, s.price
               Buckets: 1024  Batches: 1  Memory Usage: 7kB
               ->  Nested Loop  (cost=0.43..31943.30 rows=7427 width=16) (actual time=0.017..0.203 rows=134 loops=1)
                     Output: s.uid, s.pid, s.quantity, s.price
                     ->  Seq Scan on pg_temp_3.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.002..0.002 rows=20 loops=1)
                           Output: u.id, u.name
                     ->  Index Scan using sales_uid on public.sales s  (cost=0.43..25.89 rows=6 width=16) (actual time=0.003..0.008 rows=7 loops=20)
                           Output: s.id, s.uid, s.pid, s.quantity, s.price
                           Index Cond: (s.uid = u.id)
 Total runtime: 0.269 ms
(18 rows)

COMMIT
BEGIN
CREATE TABLE
CREATE TABLE
INSERT 0 20
INSERT 0 10
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=31980.55..32054.82 rows=7427 width=12) (actual time=99.339..99.418 rows=20 loops=1)
   Output: s.uid, sum((s.quantity * s.price))
   ->  Nested Loop Left Join  (cost=0.43..31924.85 rows=7427 width=12) (actual time=2.652..98.523 rows=134 loops=1)
         Output: s.uid, s.quantity, s.price
         ->  Seq Scan on pg_temp_2.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.003..0.034 rows=20 loops=1)
               Output: u.id, u.name
         ->  Index Scan using sales_uid on public.sales s  (cost=0.43..25.88 rows=6 width=12) (actual time=1.075..4.903 rows=7 loops=20)
               Output: s.id, s.uid, s.pid, s.quantity, s.price
               Index Cond: (s.uid = u.id)
 Total runtime: 99.546 ms
(10 rows)

                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=206805.96..206905.85 rows=9989 width=12) (actual time=5643.344..5643.363 rows=10 loops=1)
   Output: s.pid, sum((s.quantity * s.price))
   ->  Hash Left Join  (cost=168763.00..202188.38 rows=615677 width=12) (actual time=4340.590..5642.118 rows=5038 loops=1)
         Output: s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_2.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.003..0.013 rows=10 loops=1)
               Output: p.id
         ->  Hash  (cost=81848.00..81848.00 rows=5000000 width=12) (actual time=4339.889..4339.889 rows=5000000 loops=1)
               Output: s.pid, s.quantity, s.price
               Buckets: 262144  Batches: 4  Memory Usage: 54147kB
               ->  Seq Scan on public.sales s  (cost=0.00..81848.00 rows=5000000 width=12) (actual time=0.588..2103.750 rows=5000000 loops=1)
                     Output: s.pid, s.quantity, s.price
 Total runtime: 5646.213 ms
(13 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=32121.32..32130.47 rows=915 width=16) (actual time=0.201..0.201 rows=0 loops=1)
   Output: s.uid, s.pid, sum((s.quantity * s.price))
   ->  Hash Join  (cost=32036.14..32112.17 rows=915 width=16) (actual time=0.199..0.199 rows=0 loops=1)
         Output: s.uid, s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_2.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.004..0.005 rows=10 loops=1)
               Output: p.id, p.name
         ->  Hash  (cost=31943.30..31943.30 rows=7427 width=16) (actual time=0.190..0.190 rows=134 loops=1)
               Output: s.uid, s.pid, s.quantity, s.price
               Buckets: 1024  Batches: 1  Memory Usage: 7kB
               ->  Nested Loop  (cost=0.43..31943.30 rows=7427 width=16) (actual time=0.018..0.162 rows=134 loops=1)
                     Output: s.uid, s.pid, s.quantity, s.price
                     ->  Seq Scan on pg_temp_2.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.001..0.003 rows=20 loops=1)
                           Output: u.id, u.name
                     ->  Index Scan using sales_uid on public.sales s  (cost=0.43..25.89 rows=6 width=16) (actual time=0.003..0.006 rows=7 loops=20)
                           Output: s.id, s.uid, s.pid, s.quantity, s.price
                           Index Cond: (s.uid = u.id)
 Total runtime: 0.246 ms
(18 rows)

COMMIT
