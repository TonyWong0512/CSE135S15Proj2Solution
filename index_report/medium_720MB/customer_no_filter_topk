BEGIN
CREATE TABLE
CREATE TABLE
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.u_t  (cost=1146696.64..1146696.94 rows=20 width=25) (actual time=31412.694..31412.694 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=1146696.64..1146696.94 rows=20 width=25) (actual time=31412.544..31412.549 rows=20 loops=1)
         Output: "*SELECT*".name, "*SELECT*".uid, "*SELECT*".price
         ->  Limit  (cost=1146696.64..1146696.69 rows=20 width=25) (actual time=31412.538..31412.541 rows=20 loops=1)
               Output: u.name, s.uid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=1146696.64..1159196.64 rows=5000000 width=25) (actual time=31412.537..31412.539 rows=20 loops=1)
                     Output: u.name, s.uid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  GroupAggregate  (cost=901148.44..1013648.44 rows=5000000 width=25) (actual time=21402.855..31252.182 rows=1000001 loops=1)
                           Output: u.name, s.uid, sum((s.quantity * s.price))
                           ->  Sort  (cost=901148.44..913648.44 rows=5000000 width=25) (actual time=21402.843..29897.376 rows=5006558 loops=1)
                                 Output: u.name, s.uid, s.quantity, s.price
                                 Sort Key: s.uid, u.name
                                 Sort Method: external merge  Disk: 185672kB
                                 ->  Hash Right Join  (cost=30833.02..225181.02 rows=5000000 width=25) (actual time=481.517..10015.681 rows=5006558 loops=1)
                                       Output: u.name, s.uid, s.quantity, s.price
                                       Hash Cond: (s.uid = u.id)
                                       ->  Seq Scan on public.sales s  (cost=0.00..81848.00 rows=5000000 width=12) (actual time=0.010..1037.625 rows=5000000 loops=1)
                                             Output: s.id, s.uid, s.pid, s.quantity, s.price
                                       ->  Hash  (cost=18333.01..18333.01 rows=1000001 width=17) (actual time=481.205..481.205 rows=1000001 loops=1)
                                             Output: u.name, u.id
                                             Buckets: 131072  Batches: 1  Memory Usage: 50743kB
                                             ->  Seq Scan on public.users u  (cost=0.00..18333.01 rows=1000001 width=17) (actual time=0.004..229.480 rows=1000001 loops=1)
                                                   Output: u.name, u.id
 Total runtime: 31429.755 ms
(26 rows)

                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.p_t  (cost=1086572.12..1086572.27 rows=10 width=19) (actual time=56047.675..56047.675 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=1086572.12..1086572.27 rows=10 width=19) (actual time=56044.657..56044.664 rows=10 loops=1)
         Output: "*SELECT*".name, "*SELECT*".pid, "*SELECT*".price
         ->  Limit  (cost=1086572.12..1086572.14 rows=10 width=19) (actual time=56044.653..56044.656 rows=10 loops=1)
               Output: p.name, s.pid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=1086572.12..1099072.12 rows=5000000 width=19) (actual time=56044.652..56044.655 rows=10 loops=1)
                     Output: p.name, s.pid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  GroupAggregate  (cost=866023.92..978523.92 rows=5000000 width=19) (actual time=29380.004..56020.024 rows=10000 loops=1)
                           Output: p.name, s.pid, sum((s.quantity * s.price))
                           ->  Sort  (cost=866023.92..878523.92 rows=5000000 width=19) (actual time=29379.136..52274.134 rows=5000000 loops=1)
                                 Output: p.name, s.pid, s.quantity, s.price
                                 Sort Key: s.pid, p.name
                                 Sort Method: external merge  Disk: 146608kB
                                 ->  Hash Right Join  (cost=299.00..207147.00 rows=5000000 width=19) (actual time=2.381..6611.670 rows=5000000 loops=1)
                                       Output: p.name, s.pid, s.quantity, s.price
                                       Hash Cond: (s.pid = p.id)
                                       ->  Seq Scan on public.sales s  (cost=0.00..81848.00 rows=5000000 width=12) (actual time=0.003..1084.621 rows=5000000 loops=1)
                                             Output: s.id, s.uid, s.pid, s.quantity, s.price
                                       ->  Hash  (cost=174.00..174.00 rows=10000 width=11) (actual time=2.367..2.367 rows=10000 loops=1)
                                             Output: p.name, p.id
                                             Buckets: 1024  Batches: 1  Memory Usage: 430kB
                                             ->  Seq Scan on public.products p  (cost=0.00..174.00 rows=10000 width=11) (actual time=0.004..1.152 rows=10000 loops=1)
                                                   Output: p.name, p.id
 Total runtime: 56062.908 ms
(26 rows)

                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=30448.32..30456.45 rows=813 width=16) (actual time=0.071..0.071 rows=0 loops=1)
   ->  Hash Join  (cost=30371.31..30440.19 rows=813 width=16) (actual time=0.069..0.069 rows=0 loops=1)
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on p_t p  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.004..0.004 rows=1 loops=1)
         ->  Hash  (cost=30283.74..30283.74 rows=7005 width=16) (actual time=0.060..0.060 rows=0 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 0kB
               ->  Nested Loop  (cost=0.43..30283.74 rows=7005 width=16) (actual time=0.060..0.060 rows=0 loops=1)
                     ->  Seq Scan on u_t u  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.002..0.004 rows=20 loops=1)
                     ->  Index Scan using sales_uid on sales s  (cost=0.43..26.03 rows=6 width=16) (actual time=0.000..0.000 rows=0 loops=20)
                           Index Cond: (uid = u.id)
 Total runtime: 0.131 ms
(11 rows)

COMMIT
