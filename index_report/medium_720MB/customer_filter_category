                                                            QUERY PLAN                                                             
-----------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.28..1.67 rows=20 width=15) (actual time=1.200..2.278 rows=20 loops=1)
   ->  Index Scan using users_name_key on users  (cost=0.28..347.30 rows=5001 width=15) (actual time=1.200..2.276 rows=20 loops=1)
 Total runtime: 2.300 ms
(3 rows)

                                                  QUERY PLAN                                                  
--------------------------------------------------------------------------------------------------------------
 Limit  (cost=2.33..2.34 rows=6 width=9) (actual time=0.387..0.388 rows=6 loops=1)
   ->  Sort  (cost=2.33..2.34 rows=6 width=9) (actual time=0.386..0.386 rows=6 loops=1)
         Sort Key: name
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on products  (cost=0.00..2.25 rows=6 width=9) (actual time=0.345..0.353 rows=6 loops=1)
               Filter: (cid = 1)
               Rows Removed by Filter: 94
 Total runtime: 0.411 ms
(8 rows)

CREATE TABLE
CREATE TABLE
INSERT 0 20
INSERT 0 6
 count 
-------
  5001
(1 row)

 count 
-------
   100
(1 row)

 count 
-------
 30000
(1 row)

                                                       QUERY PLAN                                                        
-------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1054.09..1103.98 rows=4989 width=12) (actual time=0.007..0.007 rows=0 loops=1)
   Output: s.uid, sum((s.quantity * s.price))
   ->  Hash Join  (cost=867.00..998.62 rows=7396 width=12) (actual time=0.001..0.001 rows=0 loops=1)
         Output: s.uid, s.quantity, s.price
         Hash Cond: (u.id = s.uid)
         ->  Seq Scan on pg_temp_3.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.001..0.001 rows=0 loops=1)
               Output: u.id, u.name
         ->  Hash  (cost=492.00..492.00 rows=30000 width=12) (never executed)
               Output: s.uid, s.quantity, s.price
               ->  Seq Scan on public.sales s  (cost=0.00..492.00 rows=30000 width=12) (never executed)
                     Output: s.uid, s.quantity, s.price
 Total runtime: 0.070 ms
(12 rows)

                                                       QUERY PLAN                                                        
-------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=4639.26..4640.26 rows=100 width=12) (actual time=0.001..0.001 rows=0 loops=1)
   Output: s.pid, sum((s.quantity * s.price))
   ->  Hash Join  (cost=867.00..3255.51 rows=184500 width=12) (actual time=0.001..0.001 rows=0 loops=1)
         Output: s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_3.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.001..0.001 rows=0 loops=1)
               Output: p.id, p.name
         ->  Hash  (cost=492.00..492.00 rows=30000 width=12) (never executed)
               Output: s.pid, s.quantity, s.price
               ->  Seq Scan on public.sales s  (cost=0.00..492.00 rows=30000 width=12) (never executed)
                     Output: s.pid, s.quantity, s.price
 Total runtime: 0.020 ms
(12 rows)

                                                       QUERY PLAN                                                        
-------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=2153.76..2203.65 rows=4989 width=16) (actual time=0.006..0.006 rows=0 loops=1)
   Output: s.uid, s.pid, sum((s.quantity * s.price))
   ->  Hash Join  (cost=1091.07..1698.91 rows=45485 width=16) (actual time=0.001..0.001 rows=0 loops=1)
         Output: s.uid, s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_3.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.000..0.000 rows=0 loops=1)
               Output: p.id, p.name
         ->  Hash  (cost=998.62..998.62 rows=7396 width=16) (never executed)
               Output: s.uid, s.pid, s.quantity, s.price
               ->  Hash Join  (cost=867.00..998.62 rows=7396 width=16) (never executed)
                     Output: s.uid, s.pid, s.quantity, s.price
                     Hash Cond: (u.id = s.uid)
                     ->  Seq Scan on pg_temp_3.u_t u  (cost=0.00..22.30 rows=1230 width=4) (never executed)
                           Output: u.id, u.name
                     ->  Hash  (cost=492.00..492.00 rows=30000 width=16) (never executed)
                           Output: s.uid, s.pid, s.quantity, s.price
                           ->  Seq Scan on public.sales s  (cost=0.00..492.00 rows=30000 width=16) (never executed)
                                 Output: s.uid, s.pid, s.quantity, s.price
 Total runtime: 0.055 ms
(19 rows)

BEGIN
CREATE TABLE
CREATE TABLE
INSERT 0 20
INSERT 0 10
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=31980.55..32054.82 rows=7427 width=12) (actual time=100.275..100.296 rows=20 loops=1)
   Output: s.uid, sum((s.quantity * s.price))
   ->  Nested Loop Left Join  (cost=0.43..31924.85 rows=7427 width=12) (actual time=7.027..99.378 rows=134 loops=1)
         Output: s.uid, s.quantity, s.price
         ->  Seq Scan on pg_temp_3.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.004..0.057 rows=20 loops=1)
               Output: u.id, u.name
         ->  Index Scan using sales_uid on public.sales s  (cost=0.43..25.88 rows=6 width=12) (actual time=1.196..4.940 rows=7 loops=20)
               Output: s.id, s.uid, s.pid, s.quantity, s.price
               Index Cond: (s.uid = u.id)
 Total runtime: 100.395 ms
(10 rows)

                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=206805.96..206905.85 rows=9989 width=12) (actual time=3922.515..3922.532 rows=10 loops=1)
   Output: s.pid, sum((s.quantity * s.price))
   ->  Hash Left Join  (cost=168763.00..202188.38 rows=615677 width=12) (actual time=3247.122..3921.496 rows=4929 loops=1)
         Output: s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_3.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.004..0.008 rows=10 loops=1)
               Output: p.id
         ->  Hash  (cost=81848.00..81848.00 rows=5000000 width=12) (actual time=3246.375..3246.375 rows=5000000 loops=1)
               Output: s.pid, s.quantity, s.price
               Buckets: 262144  Batches: 4  Memory Usage: 54147kB
               ->  Seq Scan on public.sales s  (cost=0.00..81848.00 rows=5000000 width=12) (actual time=0.650..1572.151 rows=5000000 loops=1)
                     Output: s.pid, s.quantity, s.price
 Total runtime: 3929.553 ms
(13 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=32121.32..32130.47 rows=915 width=16) (actual time=0.233..0.233 rows=0 loops=1)
   Output: s.uid, s.pid, sum((s.quantity * s.price))
   ->  Hash Join  (cost=32036.14..32112.17 rows=915 width=16) (actual time=0.231..0.231 rows=0 loops=1)
         Output: s.uid, s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_3.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.004..0.005 rows=10 loops=1)
               Output: p.id, p.name
         ->  Hash  (cost=31943.30..31943.30 rows=7427 width=16) (actual time=0.222..0.222 rows=134 loops=1)
               Output: s.uid, s.pid, s.quantity, s.price
               Buckets: 1024  Batches: 1  Memory Usage: 7kB
               ->  Nested Loop  (cost=0.43..31943.30 rows=7427 width=16) (actual time=0.015..0.208 rows=134 loops=1)
                     Output: s.uid, s.pid, s.quantity, s.price
                     ->  Seq Scan on pg_temp_3.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.001..0.002 rows=20 loops=1)
                           Output: u.id, u.name
                     ->  Index Scan using sales_uid on public.sales s  (cost=0.43..25.89 rows=6 width=16) (actual time=0.003..0.008 rows=7 loops=20)
                           Output: s.id, s.uid, s.pid, s.quantity, s.price
                           Index Cond: (s.uid = u.id)
 Total runtime: 0.269 ms
(18 rows)

COMMIT
BEGIN
CREATE TABLE
CREATE TABLE
INSERT 0 20
INSERT 0 10
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=31980.55..32054.82 rows=7427 width=12) (actual time=0.262..0.270 rows=20 loops=1)
   Output: s.uid, sum((s.quantity * s.price))
   ->  Nested Loop Left Join  (cost=0.43..31924.85 rows=7427 width=12) (actual time=0.020..0.227 rows=134 loops=1)
         Output: s.uid, s.quantity, s.price
         ->  Seq Scan on pg_temp_2.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.003..0.003 rows=20 loops=1)
               Output: u.id, u.name
         ->  Index Scan using sales_uid on public.sales s  (cost=0.43..25.88 rows=6 width=12) (actual time=0.003..0.010 rows=7 loops=20)
               Output: s.id, s.uid, s.pid, s.quantity, s.price
               Index Cond: (s.uid = u.id)
 Total runtime: 0.703 ms
(10 rows)

                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=206805.96..206905.85 rows=9989 width=12) (actual time=4922.567..4922.583 rows=10 loops=1)
   Output: s.pid, sum((s.quantity * s.price))
   ->  Hash Left Join  (cost=168763.00..202188.38 rows=615677 width=12) (actual time=3797.449..4921.381 rows=4929 loops=1)
         Output: s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_2.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.003..0.029 rows=10 loops=1)
               Output: p.id
         ->  Hash  (cost=81848.00..81848.00 rows=5000000 width=12) (actual time=3796.698..3796.698 rows=5000000 loops=1)
               Output: s.pid, s.quantity, s.price
               Buckets: 262144  Batches: 4  Memory Usage: 54147kB
               ->  Seq Scan on public.sales s  (cost=0.00..81848.00 rows=5000000 width=12) (actual time=0.591..1865.168 rows=5000000 loops=1)
                     Output: s.pid, s.quantity, s.price
 Total runtime: 4926.966 ms
(13 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=32121.32..32130.47 rows=915 width=16) (actual time=0.202..0.202 rows=0 loops=1)
   Output: s.uid, s.pid, sum((s.quantity * s.price))
   ->  Hash Join  (cost=32036.14..32112.17 rows=915 width=16) (actual time=0.199..0.199 rows=0 loops=1)
         Output: s.uid, s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_2.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.004..0.005 rows=10 loops=1)
               Output: p.id, p.name
         ->  Hash  (cost=31943.30..31943.30 rows=7427 width=16) (actual time=0.189..0.189 rows=134 loops=1)
               Output: s.uid, s.pid, s.quantity, s.price
               Buckets: 1024  Batches: 1  Memory Usage: 7kB
               ->  Nested Loop  (cost=0.43..31943.30 rows=7427 width=16) (actual time=0.016..0.167 rows=134 loops=1)
                     Output: s.uid, s.pid, s.quantity, s.price
                     ->  Seq Scan on pg_temp_2.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.001..0.003 rows=20 loops=1)
                           Output: u.id, u.name
                     ->  Index Scan using sales_uid on public.sales s  (cost=0.43..25.89 rows=6 width=16) (actual time=0.003..0.007 rows=7 loops=20)
                           Output: s.id, s.uid, s.pid, s.quantity, s.price
                           Index Cond: (s.uid = u.id)
 Total runtime: 0.290 ms
(18 rows)

COMMIT
