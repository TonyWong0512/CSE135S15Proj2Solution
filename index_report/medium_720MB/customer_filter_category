BEGIN
CREATE TABLE
CREATE TABLE
INSERT 0 20
INSERT 0 10
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=62352.92..62365.22 rows=1230 width=12) (actual time=72.220..72.223 rows=7 loops=1)
   Output: s2.uid, sum((s2.quantity * s2.price))
   ->  Nested Loop Left Join  (cost=0.72..62343.70 rows=1230 width=12) (actual time=10.408..72.148 rows=22 loops=1)
         Output: s2.uid, s2.quantity, s2.price
         ->  Seq Scan on pg_temp_2.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.003..0.024 rows=20 loops=1)
               Output: u.id, u.name
         ->  Nested Loop  (cost=0.72..50.66 rows=1 width=12) (actual time=3.015..3.603 rows=0 loops=20)
               Output: s2.uid, s2.quantity, s2.price
               ->  Index Scan using sales_uid on public.sales s2  (cost=0.43..25.88 rows=6 width=16) (actual time=0.668..3.177 rows=7 loops=20)
                     Output: s2.id, s2.uid, s2.pid, s2.quantity, s2.price
                     Index Cond: (s2.uid = u.id)
               ->  Index Scan using products_pkey on public.products p  (cost=0.29..4.12 rows=1 width=4) (actual time=0.060..0.060 rows=0 loops=134)
                     Output: p.id, p.cid, p.name, p.sku, p.price
                     Index Cond: (p.id = s2.pid)
                     Filter: (p.cid = 1)
                     Rows Removed by Filter: 1
 Total runtime: 72.300 ms
(17 rows)

                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=206805.96..206905.85 rows=9989 width=12) (actual time=3278.987..3279.018 rows=10 loops=1)
   Output: s.pid, sum((s.quantity * s.price))
   ->  Hash Left Join  (cost=168763.00..202188.38 rows=615677 width=12) (actual time=2519.955..3274.841 rows=4929 loops=1)
         Output: s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_2.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.004..0.007 rows=10 loops=1)
               Output: p.id
         ->  Hash  (cost=81848.00..81848.00 rows=5000000 width=12) (actual time=2518.594..2518.594 rows=5000000 loops=1)
               Output: s.pid, s.quantity, s.price
               Buckets: 262144  Batches: 4  Memory Usage: 54147kB
               ->  Seq Scan on public.sales s  (cost=0.00..81848.00 rows=5000000 width=12) (actual time=0.904..1272.680 rows=5000000 loops=1)
                     Output: s.pid, s.quantity, s.price
 Total runtime: 3281.698 ms
(13 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=32121.32..32130.47 rows=915 width=16) (actual time=0.241..0.241 rows=0 loops=1)
   Output: s.uid, s.pid, sum((s.quantity * s.price))
   ->  Hash Join  (cost=32036.14..32112.17 rows=915 width=16) (actual time=0.239..0.239 rows=0 loops=1)
         Output: s.uid, s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_2.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.003..0.004 rows=10 loops=1)
               Output: p.id, p.name
         ->  Hash  (cost=31943.30..31943.30 rows=7427 width=16) (actual time=0.230..0.230 rows=134 loops=1)
               Output: s.uid, s.pid, s.quantity, s.price
               Buckets: 1024  Batches: 1  Memory Usage: 7kB
               ->  Nested Loop  (cost=0.43..31943.30 rows=7427 width=16) (actual time=0.016..0.211 rows=134 loops=1)
                     Output: s.uid, s.pid, s.quantity, s.price
                     ->  Seq Scan on pg_temp_2.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.001..0.003 rows=20 loops=1)
                           Output: u.id, u.name
                     ->  Index Scan using sales_uid on public.sales s  (cost=0.43..25.89 rows=6 width=16) (actual time=0.004..0.008 rows=7 loops=20)
                           Output: s.id, s.uid, s.pid, s.quantity, s.price
                           Index Cond: (s.uid = u.id)
 Total runtime: 0.313 ms
(18 rows)

COMMIT
