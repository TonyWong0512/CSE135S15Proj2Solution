BEGIN
CREATE TABLE
CREATE TABLE
INSERT 0 20
INSERT 0 10
                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=119288.10..119300.40 rows=1230 width=12) (actual time=107.687..107.691 rows=4 loops=1)
   Output: s2.uid, sum((s2.quantity * s2.price))
   ->  Nested Loop Left Join  (cost=0.85..119278.87 rows=1230 width=12) (actual time=10.530..107.617 rows=20 loops=1)
         Output: s2.uid, s2.quantity, s2.price
         ->  Seq Scan on pg_temp_2.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.004..0.026 rows=20 loops=1)
               Output: u.id, u.name
         ->  Nested Loop  (cost=0.85..96.95 rows=1 width=12) (actual time=5.207..5.377 rows=0 loops=20)
               Output: s2.uid, s2.quantity, s2.price
               ->  Index Scan using sales_uid on public.sales s2  (cost=0.56..35.87 rows=8 width=16) (actual time=0.712..3.189 rows=6 loops=20)
                     Output: s2.id, s2.uid, s2.pid, s2.quantity, s2.price
                     Index Cond: (s2.uid = u.id)
               ->  Index Scan using products_pkey on public.products p  (cost=0.29..7.62 rows=1 width=4) (actual time=0.373..0.373 rows=0 loops=116)
                     Output: p.id, p.cid, p.name, p.sku, p.price
                     Index Cond: (p.id = s2.pid)
                     Filter: (p.cid = 1)
                     Rows Removed by Filter: 1
 Total runtime: 107.787 ms
(17 rows)

                                                                   QUERY PLAN                                                                    
-------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=1173312.34..1174300.26 rows=98792 width=12) (actual time=19526.072..19526.226 rows=10 loops=1)
   Output: s.pid, sum((s.quantity * s.price))
   ->  Hash Left Join  (cost=1012568.00..1170511.00 rows=373512 width=12) (actual time=16383.062..19525.160 rows=2944 loops=1)
         Output: s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_2.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.004..0.008 rows=10 loops=1)
               Output: p.id
         ->  Hash  (cost=491083.00..491083.00 rows=30000000 width=12) (actual time=16381.697..16381.697 rows=30000000 loops=1)
               Output: s.pid, s.quantity, s.price
               Buckets: 262144  Batches: 16  Memory Usage: 81971kB
               ->  Seq Scan on public.sales s  (cost=0.00..491083.00 rows=30000000 width=12) (actual time=0.760..8395.595 rows=30000000 loops=1)
                     Output: s.pid, s.quantity, s.price
 Total runtime: 19532.494 ms
(13 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=44636.19..44637.35 rows=116 width=16) (actual time=0.299..0.299 rows=0 loops=1)
   Output: s.uid, s.pid, sum((s.quantity * s.price))
   ->  Hash Join  (cost=44379.41..44635.03 rows=116 width=16) (actual time=0.297..0.297 rows=0 loops=1)
         Output: s.uid, s.pid, s.quantity, s.price
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on pg_temp_2.p_t p  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.004..0.006 rows=10 loops=1)
               Output: p.id, p.name
         ->  Hash  (cost=44263.31..44263.31 rows=9288 width=16) (actual time=0.285..0.285 rows=116 loops=1)
               Output: s.uid, s.pid, s.quantity, s.price
               Buckets: 1024  Batches: 1  Memory Usage: 6kB
               ->  Nested Loop  (cost=0.56..44263.31 rows=9288 width=16) (actual time=0.023..0.249 rows=116 loops=1)
                     Output: s.uid, s.pid, s.quantity, s.price
                     ->  Seq Scan on pg_temp_2.u_t u  (cost=0.00..22.30 rows=1230 width=4) (actual time=0.001..0.003 rows=20 loops=1)
                           Output: u.id, u.name
                     ->  Index Scan using sales_uid on public.sales s  (cost=0.56..35.89 rows=8 width=16) (actual time=0.005..0.010 rows=6 loops=20)
                           Output: s.id, s.uid, s.pid, s.quantity, s.price
                           Index Cond: (s.uid = u.id)
 Total runtime: 0.354 ms
(18 rows)

COMMIT
