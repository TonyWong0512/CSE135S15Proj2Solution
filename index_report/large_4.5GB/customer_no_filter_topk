BEGIN
CREATE TABLE
CREATE TABLE
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.u_t  (cost=7476146.82..7476147.12 rows=20 width=26) (actual time=246548.807..246548.807 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=7476146.82..7476147.12 rows=20 width=26) (actual time=246548.587..246548.598 rows=20 loops=1)
         Output: "*SELECT*".name, "*SELECT*".uid, "*SELECT*".price
         ->  Limit  (cost=7476146.82..7476146.87 rows=20 width=26) (actual time=246548.579..246548.583 rows=20 loops=1)
               Output: u.name, s.uid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=7476146.82..7551146.82 rows=30000000 width=26) (actual time=246548.578..246548.580 rows=20 loops=1)
                     Output: u.name, s.uid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  GroupAggregate  (cost=6002857.61..6677857.61 rows=30000000 width=26) (actual time=137831.917..245457.809 rows=5000001 loops=1)
                           Output: u.name, s.uid, sum((s.quantity * s.price))
                           ->  Sort  (cost=6002857.61..6077857.61 rows=30000000 width=26) (actual time=137831.898..234813.728 rows=30012372 loops=1)
                                 Output: u.name, s.uid, s.quantity, s.price
                                 Sort Key: s.uid, u.name
                                 Sort Method: external merge  Disk: 1114256kB
                                 ->  Hash Right Join  (cost=183462.24..1559312.24 rows=30000000 width=26) (actual time=2578.345..65316.541 rows=30012372 loops=1)
                                       Output: u.name, s.uid, s.quantity, s.price
                                       Hash Cond: (s.uid = u.id)
                                       ->  Seq Scan on public.sales s  (cost=0.00..491083.00 rows=30000000 width=12) (actual time=0.727..7785.092 rows=30000000 loops=1)
                                             Output: s.uid, s.quantity, s.price
                                       ->  Hash  (cost=91665.66..91665.66 rows=4999966 width=18) (actual time=2576.854..2576.854 rows=5000001 loops=1)
                                             Output: u.name, u.id
                                             Buckets: 262144  Batches: 4  Memory Usage: 63502kB
                                             ->  Seq Scan on public.users u  (cost=0.00..91665.66 rows=4999966 width=18) (actual time=0.005..1298.522 rows=5000001 loops=1)
                                                   Output: u.name, u.id
 Total runtime: 246703.338 ms
(26 rows)

                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.p_t  (cost=6758364.09..6758364.24 rows=10 width=20) (actual time=295691.888..295691.888 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=6758364.09..6758364.24 rows=10 width=20) (actual time=295691.785..295691.792 rows=10 loops=1)
         Output: "*SELECT*".name, "*SELECT*".pid, "*SELECT*".price
         ->  Limit  (cost=6758364.09..6758364.11 rows=10 width=20) (actual time=295691.782..295691.786 rows=10 loops=1)
               Output: p.name, s.pid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=6758364.09..6833364.09 rows=30000000 width=20) (actual time=295691.780..295691.781 rows=10 loops=1)
                     Output: p.name, s.pid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  GroupAggregate  (cost=5435074.87..6110074.87 rows=30000000 width=20) (actual time=167810.251..295564.307 rows=100000 loops=1)
                           Output: p.name, s.pid, sum((s.quantity * s.price))
                           ->  Sort  (cost=5435074.87..5510074.87 rows=30000000 width=20) (actual time=167809.589..284904.222 rows=30000000 loops=1)
                                 Output: p.name, s.pid, s.quantity, s.price
                                 Sort Key: s.pid, p.name
                                 Sort Method: external merge  Disk: 985160kB
                                 ->  Hash Right Join  (cost=2986.00..1094069.00 rows=30000000 width=20) (actual time=145.410..57646.952 rows=30000000 loops=1)
                                       Output: p.name, s.pid, s.quantity, s.price
                                       Hash Cond: (s.pid = p.id)
                                       ->  Seq Scan on public.sales s  (cost=0.00..491083.00 rows=30000000 width=12) (actual time=1.529..8285.919 rows=30000000 loops=1)
                                             Output: s.id, s.uid, s.pid, s.quantity, s.price
                                       ->  Hash  (cost=1736.00..1736.00 rows=100000 width=12) (actual time=143.841..143.841 rows=100000 loops=1)
                                             Output: p.name, p.id
                                             Buckets: 16384  Batches: 1  Memory Usage: 4649kB
                                             ->  Seq Scan on public.products p  (cost=0.00..1736.00 rows=100000 width=12) (actual time=0.004..55.159 rows=100000 loops=1)
                                                   Output: p.name, p.id
 Total runtime: 295710.327 ms
(26 rows)

                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=42139.06..42140.09 rows=103 width=16) (actual time=0.019..0.019 rows=0 loops=1)
   ->  Hash Join  (cost=41908.05..42138.03 rows=103 width=16) (actual time=0.018..0.018 rows=0 loops=1)
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on p_t p  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.003..0.003 rows=1 loops=1)
         ->  Hash  (cost=41798.55..41798.55 rows=8760 width=16) (actual time=0.010..0.010 rows=0 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 0kB
               ->  Nested Loop  (cost=0.56..41798.55 rows=8760 width=16) (actual time=0.010..0.010 rows=0 loops=1)
                     ->  Seq Scan on u_t u  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.001..0.002 rows=20 loops=1)
                     ->  Index Scan using sales_uid on sales s  (cost=0.56..35.93 rows=8 width=16) (actual time=0.000..0.000 rows=0 loops=20)
                           Index Cond: (uid = u.id)
 Total runtime: 0.058 ms
(11 rows)

COMMIT
