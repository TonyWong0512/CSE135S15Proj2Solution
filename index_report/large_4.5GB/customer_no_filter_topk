BEGIN
CREATE TABLE
CREATE TABLE
                                                                                 QUERY PLAN                                                                                  
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.u_t  (cost=7476146.82..7476147.12 rows=20 width=26) (actual time=763624.912..763624.912 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=7476146.82..7476147.12 rows=20 width=26) (actual time=763622.268..763622.599 rows=20 loops=1)
         Output: "*SELECT*".name, "*SELECT*".uid, "*SELECT*".price
         ->  Limit  (cost=7476146.82..7476146.87 rows=20 width=26) (actual time=763622.258..763622.448 rows=20 loops=1)
               Output: u.name, s.uid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=7476146.82..7551146.82 rows=30000000 width=26) (actual time=763622.253..763622.318 rows=20 loops=1)
                     Output: u.name, s.uid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 26kB
                     ->  GroupAggregate  (cost=6002857.61..6677857.61 rows=30000000 width=26) (actual time=453520.873..748538.022 rows=4987629 loops=1)
                           Output: u.name, s.uid, sum((s.quantity * s.price))
                           ->  Sort  (cost=6002857.61..6077857.61 rows=30000000 width=26) (actual time=453520.824..639738.887 rows=30000000 loops=1)
                                 Output: u.name, s.uid, s.quantity, s.price
                                 Sort Key: s.uid, u.name
                                 Sort Method: external merge  Disk: 1113960kB
                                 ->  Hash Join  (cost=183462.24..1559312.24 rows=30000000 width=26) (actual time=30826.736..306297.201 rows=30000000 loops=1)
                                       Output: u.name, s.uid, s.quantity, s.price
                                       Hash Cond: (s.uid = u.id)
                                       ->  Seq Scan on public.sales s  (cost=0.00..491083.00 rows=30000000 width=12) (actual time=0.475..78086.942 rows=30000000 loops=1)
                                             Output: s.uid, s.quantity, s.price
                                       ->  Hash  (cost=91665.66..91665.66 rows=4999966 width=18) (actual time=30825.340..30825.340 rows=5000001 loops=1)
                                             Output: u.name, u.id
                                             Buckets: 262144  Batches: 4  Memory Usage: 63502kB
                                             ->  Seq Scan on public.users u  (cost=0.00..91665.66 rows=4999966 width=18) (actual time=0.016..15208.111 rows=5000001 loops=1)
                                                   Output: u.name, u.id
 Total runtime: 763656.319 ms
(26 rows)

                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Insert on pg_temp_2.p_t  (cost=6758364.09..6758364.24 rows=10 width=20) (actual time=869119.195..869119.195 rows=0 loops=1)
   ->  Subquery Scan on "*SELECT*"  (cost=6758364.09..6758364.24 rows=10 width=20) (actual time=869114.386..869114.494 rows=10 loops=1)
         Output: "*SELECT*".name, "*SELECT*".pid, "*SELECT*".price
         ->  Limit  (cost=6758364.09..6758364.11 rows=10 width=20) (actual time=869114.376..869114.439 rows=10 loops=1)
               Output: p.name, s.pid, (sum((s.quantity * s.price)))
               ->  Sort  (cost=6758364.09..6833364.09 rows=30000000 width=20) (actual time=869114.369..869114.390 rows=10 loops=1)
                     Output: p.name, s.pid, (sum((s.quantity * s.price)))
                     Sort Key: (sum((s.quantity * s.price)))
                     Sort Method: top-N heapsort  Memory: 25kB
                     ->  GroupAggregate  (cost=5435074.87..6110074.87 rows=30000000 width=20) (actual time=613654.060..868806.216 rows=100000 loops=1)
                           Output: p.name, s.pid, sum((s.quantity * s.price))
                           ->  Sort  (cost=5435074.87..5510074.87 rows=30000000 width=20) (actual time=613651.043..790101.320 rows=30000000 loops=1)
                                 Output: p.name, s.pid, s.quantity, s.price
                                 Sort Key: s.pid, p.name
                                 Sort Method: external merge  Disk: 985160kB
                                 ->  Hash Join  (cost=2986.00..1094069.00 rows=30000000 width=20) (actual time=751.475..373188.074 rows=30000000 loops=1)
                                       Output: p.name, s.pid, s.quantity, s.price
                                       Hash Cond: (s.pid = p.id)
                                       ->  Seq Scan on public.sales s  (cost=0.00..491083.00 rows=30000000 width=12) (actual time=1.401..119207.407 rows=30000000 loops=1)
                                             Output: s.id, s.uid, s.pid, s.quantity, s.price
                                       ->  Hash  (cost=1736.00..1736.00 rows=100000 width=12) (actual time=750.026..750.026 rows=100000 loops=1)
                                             Output: p.name, p.id
                                             Buckets: 16384  Batches: 1  Memory Usage: 4649kB
                                             ->  Seq Scan on public.products p  (cost=0.00..1736.00 rows=100000 width=12) (actual time=0.010..372.572 rows=100000 loops=1)
                                                   Output: p.name, p.id
 Total runtime: 869148.896 ms
(26 rows)

                                                                   QUERY PLAN                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------
 HashAggregate  (cost=42139.06..42140.09 rows=103 width=16) (actual time=218.144..218.144 rows=0 loops=1)
   ->  Hash Join  (cost=41908.05..42138.03 rows=103 width=16) (actual time=218.135..218.135 rows=0 loops=1)
         Hash Cond: (p.id = s.pid)
         ->  Seq Scan on p_t p  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.007..0.041 rows=10 loops=1)
         ->  Hash  (cost=41798.55..41798.55 rows=8760 width=16) (actual time=218.035..218.035 rows=328 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 16kB
               ->  Nested Loop  (cost=0.56..41798.55 rows=8760 width=16) (actual time=3.177..216.485 rows=328 loops=1)
                     ->  Seq Scan on u_t u  (cost=0.00..21.60 rows=1160 width=4) (actual time=0.006..0.072 rows=20 loops=1)
                     ->  Index Scan using sales_uid on sales s  (cost=0.56..35.93 rows=8 width=16) (actual time=1.776..10.680 rows=16 loops=20)
                           Index Cond: (uid = u.id)
 Total runtime: 218.220 ms
(11 rows)

COMMIT
